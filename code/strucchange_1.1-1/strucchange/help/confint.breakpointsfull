confint.breakpointsfull     package:strucchange     R Documentation

_C_o_n_f_i_d_e_n_c_e _I_n_t_e_r_v_a_l_s _f_o_r _B_r_e_a_k_p_o_i_n_t_s

_D_e_s_c_r_i_p_t_i_o_n:

     Computes confidence intervals for breakpoints.

_U_s_a_g_e:

     ## S3 method for class 'breakpointsfull':
     confint(object, parm = NULL, level = 0.95,
         breaks = NULL, het.reg = TRUE, het.err = TRUE, ...)
     ## S3 method for class 'confint.breakpoints':
     lines(x, col = 2, angle = 90, length = 0.05,
         code = 3, at = NULL, breakpoints = TRUE, ...)

_A_r_g_u_m_e_n_t_s:

  object: an object of class '"breakpointsfull"' as computed by
          'breakpoints' from a 'formula'.

    parm: the same as 'breaks', only one of the two should be
          specified.

   level: the confidence level required.

  breaks: an integer specifying the number of breaks to be used. By
          default the breaks of the minimum BIC partition are used.

 het.reg: logical. Should heterogenous regressors be assumed? If set to
          'FALSE' the distribution of the regressors is assumed to be
          homogenous over the segments.

 het.err: logical. Should heterogenous errors be assumed? If set to
          'FALSE' the distribution of the errors is assumed to be
          homogenous over the segments.

       x: an object of class '"confint.breakpoints"' as returned by
          'confint'.

col, angle, length, code: arguments passed to 'arrows'.

      at: position on the y axis, where the confidence arrows should be
          drawn. By default they are drawn at the bottom of the plot.

breakpoints: logical. If 'TRUE' vertical lines for the breakpoints are
          drawn.

     ...: _currently not used_.

_D_e_t_a_i_l_s:

     As the breakpoints are integers (observation numbers) the
     corresponding confidence intervals are also rounded to integers.

     The distribution function used for the computation of confidence
     intervals of breakpoints is given in Bai (1997). The procedure, in
     particular the usage of heterogenous regressors and/or errors, is
     described in more detail in Bai & Perron (2003).

     The breakpoints should be computed from a formula with
     'breakpoints', then the confidence intervals for the breakpoints
     can be derived by 'confint' and these can be visualized by
     'lines'. For an example see below.

_V_a_l_u_e:

     A matrix containing the breakpoints and their lower and upper
     confidence boundary for the given level.

_R_e_f_e_r_e_n_c_e_s:

     Bai J. (1997), Estimation of a Change Point in Multiple Regression
     Models, _Review of Economics and Statistics_, *79*, 551-563.

     Bai J., Perron P. (2003), Computation and Analysis of Multiple
     Structural Change Models, _Journal of Applied Econometrics_, *18*,
     1-22.

_S_e_e _A_l_s_o:

     'breakpoints'

_E_x_a_m_p_l_e_s:

     require(ts)

     ## Nile data with one breakpoint: the annual flows drop in 1898
     ## because the first Ashwan dam was built
     data(Nile)
     plot(Nile)

     ## dating breaks
     bp.nile <- breakpoints(Nile ~ 1)
     ci.nile <- confint(bp.nile, breaks = 1)
     lines(ci.nile)

